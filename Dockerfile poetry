FROM python:3.11-slim as base

ENV PYTHONUNBUFFERED 1
ENV PYTHONFAULTHANDLER 1
ENV PYTHONHASHSEED random

FROM base as builder
WORKDIR /app

ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK 1
ENV PYTHONDONTWRITEBYTECODE 1
ENV POETRY_VERSION=1.3.2

# libpq-dev for minimal set of postgresql; build-essential for compiling software
RUN apt-get update && apt-get install -y \
	libpq-dev \
	build-essential

RUN pip install "poetry==$POETRY_VERSION"
RUN python -m venv .venv

COPY pyproject.toml poetry.lock README.md ./
RUN poetry config virtualenvs.in-project true && poetry install --no-root

COPY ./musicdb ./musicdb
RUN poetry build && .venv/bin/pip install --no-cache-dir --no-deps dist/*.whl

FROM base as final
WORKDIR /app

RUN  apt-get update && apt-get install -y libpq-dev

COPY --from=builder /app/.venv .venv
COPY . .

CMD ["./deploy/scripts/docker-entry.sh", "8000"]
